package com.microservicemysql.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.microservicemysql.models.entity.UsuarioEntity;
import com.microservicemysql.services.UsuarioService;

import lombok.Setter;

@RestController
@RequestMapping("/api/usuario")
public class UsuarioController {
	
	@Autowired
	private UsuarioService service;
		
	@GetMapping	
	public ResponseEntity<?> getAllUsers(){
		return ResponseEntity.ok().body(service.findAll());		
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<?> getUserById(@PathVariable Long id){
		
		Optional<UsuarioEntity> o = service.findById(id);		
		if(o.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(o.get());
	}
	
	@PostMapping
	public ResponseEntity<?> createUser(@RequestBody UsuarioEntity usario){
		UsuarioEntity usuarioDB = service.save(usario);
		return ResponseEntity.status(HttpStatus.CREATED).body(usuarioDB);		
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<?> editUsers(@RequestBody UsuarioEntity usario, @PathVariable Long id){
		Optional<UsuarioEntity> o = service.findById(id);
		if(o.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		UsuarioEntity usuarioDB = o.get();
		usuarioDB
	}
	

}
